#!/bin/bash

source utils
declare -A vertices=()
declare -A edges=()

addEdge() {
    p1="$1"
    p2="$2"
    p3="$3"
    vertices["$p1"]+=" $p2"
    edges["$p1"_"$p2"]="$p3"
}

bellman_ford() {
    declare -A distances=()
    INT_MAX=$((2 ** 32))
    local source=$3
    # Set all distances to infinity
    for vertex in "${!vertices[@]}"; do
        distances[$vertex]=$INT_MAX
    done

    # Init distance of source to 0
    distances[$source]=0

    for ((i = 0; i < ${#vertices[@]} - 1; ++i)); do
        for u in "${!vertices[@]}"; do
            for v in "${!vertices[@]}"; do
                if [ -n "${edges[${u}_$v]}" ]; then
                    distance=$((distances[$u] + edges[${u}_$v]))
                    distances[$v]=$((distance < distances[$v] ? distance : distances[${v}]))
                fi
            done
        done
    done

    ## print results
    echo
    center "=" "Bellman Ford"
    space_between "Edges" ${#edges}
    space_between "Vertices" "${#vertices}"
    center
    space_between "Destination" "Distances"
    space_between "-----------" "---------"
    for dist in "${!distances[@]}"; do
        space_between "$dist" "${distances[$dist]}"
    done
    center "="
}

main() {
    # @todo: check arg names and error handling
    E=(
        "b-ford baran 152"
        "b-ford lovelace 99"
        "lovelace knuth 71"
        "lovelace hopper 139"
        "knuth hopper 180"
        "knuth cerf 119"
        "baran cerf 145"
        "cerf hopper 122"
        "hopper"
    )

    for e in "${E[@]}"; do
        addEdge $e
    done

    ## execute and log the results
    bellman_ford 6 8 b-ford | tee bf-log.txt
}
main
